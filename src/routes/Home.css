.casa {
  border-top: 5px double #c90f0d;
  margin-top: 25px;
}

.home {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.home h1 {
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 1.5rem;
}

.post {
  display: flex;
  flex-direction: column;
  margin-bottom: 1.5rem;
  padding-bottom: 1.5rem;
  border-bottom: 5px double #000;
}

.containerdiv {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1rem;
  gap: 1rem;
}

.post h2,
.post p,
h4 {
  margin-bottom: 1rem;
}

.post h2::first-letter {
  text-transform: uppercase;
}

.btn-btn {
  background-color: rgb(240, 240, 240);
  color: #000;
  border: 2px solid #000;
  opacity: 15;
  padding: 0.5rem 1rem;
  border-radius: 15px;
  max-width: 100px;
  text-align: center;
  cursor: pointer;
  transition: 0.8s;
}

.btn-btn:hover {
  background-color: rgb(0, 0, 0);
  color: #fff;
  border: 2px solid #fff;
  opacity: 15;
  padding: 0.5rem 1rem;
  border-radius: 15px;
  max-width: 100px;
  text-align: center;
  cursor: pointer;
  transition: 0.8s;
}

span {
  color: #ffff00;
}

.infosapi {
  text-align: center;
  font-weight: 700;
  font-size: 2rem;
}

.actions {
  display: flex;
  align-items: center;
  justify-content: center;
}

.imgCar {
  width: 20%;
  aspect-ratio: 3/2;
  object-fit: contain;
  align-items: center;
}

.containerCadastros {
  display: flex;
  flex-direction: column;
  padding: 1rem;
  margin: 1rem;
  border: solid 1px;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,
    rgba(255, 255, 255, 0.5) 0px 18px 36px -18px inset;
}

.aguarde {
  text-align: center;
  text-transform: uppercase;
  font-weight: 300;
  font-size: 2rem;
}

.txtBtn {
  color: #000;
}
.txtBtn:hover {
  color: #fff;
  text-decoration: #fff;
}
@media (max-width: 800px) {
  .imgCar {
    width: 50%;
    aspect-ratio: 3/2;
    object-fit: contain;
    align-items: center;
  }
}

/* .c-loader {
  animation: is-rotating 3s infinite;
  border: 6px solid #e5e5e5;
  border-radius: 50%;
  border-top-color: #51d4db;
  height: 50px;
  width: 50px;
  align-items: center;
  display: flex;
  justify-content: center;
  transform: scale(1);
}

@keyframes is-rotating {
  to {
    transform: rotate(1turn);
  }
} */


h2 {
  color: #ccc;
  margin: 0;
  font-size: 1rem;
  text-transform: uppercase;
  letter-spacing: .2em;
  text-align: center;
  padding: 5%;
}

/*
 * Loading Dots
 * Can we use pseudo elements here instead :after?
 */
.loading span {
  display: inline-block;
  vertical-align: middle;
  width: .6em;
  height: .6em;
  margin: .19em;
  background: #007DB6;
  border-radius: .6em;
  animation: loading 1s infinite alternate;
}

/*
 * Dots Colors
 * Smarter targeting vs nth-of-type?
 */
.loading span:nth-of-type(2) {
  background: #008FB2;
  animation-delay: 0.2s;
}
.loading span:nth-of-type(3) {
  background: #009B9E;
  animation-delay: 0.4s;
}
.loading span:nth-of-type(4) {
  background: #00A77D;
  animation-delay: 0.6s;
}
.loading span:nth-of-type(5) {
  background: #00B247;
  animation-delay: 0.8s;
}
.loading span:nth-of-type(6) {
  background: #5AB027;
  animation-delay: 1.0s;
}
.loading span:nth-of-type(7) {
  background: #A0B61E;
  animation-delay: 1.2s;
}

/*
 * Animation keyframes
 * Use transition opacity instead of keyframes?
 */
@keyframes loading {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}